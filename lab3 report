%% 3. Laboratorijas darbs
% Artemijs Rilevs
%% Darba uzdevumi
% * Uzrakstit skriptu, kurs zime doto grafiku.
% * Uzrakstit funkciju ar datu filtraciju.
%% Funkcija
function y=lab3_Artemijs(t)
if nargin == 0
    t = 0:0.01:6.5;
end

%t_const=0:0.01:1;
t_const_f= (t>=0)&(t<1);
t_const = t(t_const_f);
%t_sin=1:0.01:3;
t_sin_f= (t>=1)&(t<3);
t_sin = t(t_sin_f);
%t_slipa=3:0.01:3.5;
t_slipa_f= (t>=3)&(t<3.5);
t_slipa = t(t_slipa_f);
%t_const2=3.5:0.01:4.5;
t_const2_f= (t>=3.5)&(t<4.5);
t_const2 = t(t_const2_f);
%t_noise=4.5:0.01:6.5;
t_noise_f= (t>=4.5)&(t<=6.5);
t_noise = t(t_noise_f);

%% Skripts kas zime
%plot(t,y)
%axis([0 7 -1 1])
% sinusoida
%t_sin=1:0.01:3;
A0=0;
A=0.5;
T = (3-1)/4;
f =1/T;
delay = 1;
y_sin=A0+A*sin(2*pi*f*(t_sin-delay));
% konstante
%t_const=0:0.01:1;
y_const=0.5+zeros(size(t_const));
% konstante2
%t_const2=3.5:0.01:4.5;
y_const2=0+zeros(size(t_const2));
% slipa
%t_slipa=3:0.01:3.5;
k=(0.125-(-0.125))/(3-3.5);
y_slipa= k*(t_slipa-(3+((3.5-3)/2)));
% troksnis
%t_noise=4.5:0.01:6.5;
y_noise=(rand(size(t_noise)))/2-0.25;
% Visu signalu apvienosana
t = [t_const,t_sin,t_slipa,t_const2,t_noise];
y = [y_const,y_sin,y_slipa,y_const2,y_noise];
%% Funkcijas turpinajums
if nargout == 0
    plot(t,y);y=[];
    axis([0 7 -1 1])
end

%% Secinajums
% Saja darba iemacijos rakstit skriptu, kurs zime jebkuru grafiku un
% parveidot to skriptu par funkciju ar datu filtraciju, kura var aprekinat
% funkcijas vertibu izveleta punkta. 
